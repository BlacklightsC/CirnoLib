using static CirnoLib.Jass.Function;


namespace CirnoLib.Jass.CustomLibrary
{
    public static class Ascii
    {
        private static readonly int[] i;      // hash
        private static readonly int[] h;      // hash2
        private static readonly int[] y;      // hash3
        private static readonly string[] c;   // char

        static Ascii()
        {
            i = new int[0x2000];
            h = new int[0x2000];
            y = new int[0x2000];
            c = new string[0x2000];

            i[966] = 8;
            i[1110] = 9;
            i[1621] = 10;
            i[1375] = 12;
            i[447] = 13;
            i[233] = 32;
            i[2014] = 33;
            i[1348] = 34;
            i[1038] = 35;
            i[1299] = 36;
            i[1018] = 37;
            i[1312] = 38;
            i[341] = 39;
            i[939] = 40;
            i[969] = 41;
            i[952] = 42;
            i[2007] = 43;
            i[1415] = 44;
            i[2020] = 45;
            i[904] = 46;
            i[1941] = 47;
            i[918] = 48;
            i[1593] = 49;
            i[719] = 50;
            i[617] = 51;
            i[703] = 52;
            i[573] = 53;
            i[707] = 54;
            i[1208] = 55;
            i[106] = 56;
            i[312] = 57;
            i[124] = 58;
            i[1176] = 59;
            i[74] = 60;
            i[1206] = 61;
            i[86] = 62;
            i[340] = 63;
            i[35] = 64;
            i[257] = 65;
            i[213] = 66;
            i[271] = 67;
            i[219] = 68;
            i[1330] = 69;
            i[1425] = 70;
            i[1311] = 71;
            i[238] = 72;
            i[1349] = 73;
            i[244] = 74;
            i[1350] = 75;
            i[205] = 76;
            i[1392] = 77;
            i[1378] = 78;
            i[1432] = 79;
            i[1455] = 80;
            i[1454] = 81;
            i[1431] = 82;
            i[1409] = 83;
            i[1442] = 84;
            i[534] = 85;
            i[1500] = 86;
            i[771] = 87;
            i[324] = 88;
            i[1021] = 89;
            i[73] = 90;
            i[1265] = 91;
            i[1941] = 92;
            i[1671] = 93;
            i[1451] = 94;
            i[1952] = 95;
            i[252] = 96;
            i[257] = 97;
            i[213] = 98;
            i[271] = 99;
            i[219] = 100;
            i[1330] = 101;
            i[1425] = 102;
            i[1311] = 103;
            i[238] = 104;
            i[1349] = 105;
            i[244] = 106;
            i[1350] = 107;
            i[205] = 108;
            i[1392] = 109;
            i[1378] = 110;
            i[1432] = 111;
            i[1455] = 112;
            i[1454] = 113;
            i[1431] = 114;
            i[1409] = 115;
            i[1442] = 116;
            i[534] = 117;
            i[1500] = 118;
            i[771] = 119;
            i[324] = 120;
            i[1021] = 121;
            i[73] = 122;
            i[868] = 123;
            i[1254] = 124;
            i[588] = 125;
            i[93] = 126;
            i[316] = 161;
            i[779] = 162;
            i[725] = 163;
            i[287] = 164;
            i[212] = 165;
            i[7] = 166;
            i[29] = 167;
            i[1958] = 168;
            i[1009] = 169;
            i[1580] = 170;
            i[1778] = 171;
            i[103] = 172;
            i[400] = 174;
            i[1904] = 175;
            i[135] = 176;
            i[1283] = 177;
            i[469] = 178;
            i[363] = 179;
            i[550] = 180;
            i[1831] = 181;
            i[1308] = 182;
            i[1234] = 183;
            i[1017] = 184;
            i[1093] = 185;
            i[1577] = 186;
            i[606] = 187;
            i[1585] = 188;
            i[1318] = 189;
            i[980] = 190;
            i[1699] = 191;
            i[1292] = 192;
            i[477] = 193;
            i[709] = 194;
            i[1600] = 195;
            i[2092] = 196;
            i[50] = 197;
            i[546] = 198;
            i[408] = 199;
            i[853] = 200;
            i[205] = 201;
            i[411] = 202;
            i[1311] = 203;
            i[1422] = 204;
            i[1808] = 205;
            i[457] = 206;
            i[1280] = 207;
            i[614] = 208;
            i[1037] = 209;
            i[237] = 210;
            i[1409] = 211;
            i[1023] = 212;
            i[1361] = 213;
            i[695] = 214;
            i[161] = 215;
            i[1645] = 216;
            i[1822] = 217;
            i[644] = 218;
            i[1395] = 219;
            i[677] = 220;
            i[1677] = 221;
            i[881] = 222;
            i[861] = 223;
            i[1408] = 224;
            i[1864] = 225;
            i[1467] = 226;
            i[1819] = 227;
            i[1971] = 228;
            i[949] = 229;
            i[774] = 230;
            i[1828] = 231;
            i[865] = 232;
            i[699] = 233;
            i[786] = 234;
            i[1806] = 235;
            i[1286] = 236;
            i[1128] = 237;
            i[1490] = 238;
            i[1720] = 239;
            i[1817] = 240;
            i[729] = 241;
            i[1191] = 242;
            i[1164] = 243;
            i[413] = 244;
            i[349] = 245;
            i[1409] = 246;
            i[660] = 247;
            i[2016] = 248;
            i[1087] = 249;
            i[1497] = 250;
            i[753] = 251;
            i[1579] = 252;
            i[1456] = 253;
            i[606] = 254;
            i[1625] = 255;
            h[92] = 47;
            h[201] = 108;
            h[201] = 76;
            h[203] = 103;
            h[203] = 71;
            h[246] = 115;
            h[246] = 83;
            h[246] = 211;
            h[254] = 187;
            y[201] = 108;
            y[203] = 103;
            y[246] = 115;

            c[8] = "\b";
            c[9] = "\t";
            c[10] = "\n";
            c[12] = "\f";
            c[13] = "\r";
            c[32] = " ";
            c[33] = "!";
            c[34] = "\"";
            c[35] = "#";
            c[36] = "$";
            c[37] = "%";
            c[38] = "&";
            c[39] = "'";
            c[40] = "(";
            c[41] = ")";
            c[42] = "*";
            c[43] = "+";
            c[44] = ",";
            c[45] = "-";
            c[46] = ".";
            c[47] = "/";
            c[48] = "0";
            c[49] = "1";
            c[50] = "2";
            c[51] = "3";
            c[52] = "4";
            c[53] = "5";
            c[54] = "6";
            c[55] = "7";
            c[56] = "8";
            c[57] = "9";
            c[58] = ":";
            c[59] = ";";
            c[60] = "<";
            c[61] = "=";
            c[62] = ">";
            c[63] = "?";
            c[64] = "@";
            c[65] = "A";
            c[66] = "B";
            c[67] = "C";
            c[68] = "D";
            c[69] = "E";
            c[70] = "F";
            c[71] = "G";
            c[72] = "H";
            c[73] = "I";
            c[74] = "J";
            c[75] = "K";
            c[76] = "L";
            c[77] = "M";
            c[78] = "N";
            c[79] = "O";
            c[80] = "P";
            c[81] = "Q";
            c[82] = "R";
            c[83] = "S";
            c[84] = "T";
            c[85] = "U";
            c[86] = "V";
            c[87] = "W";
            c[88] = "X";
            c[89] = "Y";
            c[90] = "Z";
            c[91] = "[";
            c[92] = "\\";
            c[93] = "]";
            c[94] = "^";
            c[95] = "_";
            c[96] = "`";
            c[97] = "a";
            c[98] = "b";
            c[99] = "c";
            c[100] = "d";
            c[101] = "e";
            c[102] = "f";
            c[103] = "g";
            c[104] = "h";
            c[105] = "i";
            c[106] = "j";
            c[107] = "k";
            c[108] = "l";
            c[109] = "m";
            c[110] = "n";
            c[111] = "o";
            c[112] = "p";
            c[113] = "q";
            c[114] = "r";
            c[115] = "s";
            c[116] = "t";
            c[117] = "u";
            c[118] = "v";
            c[119] = "w";
            c[120] = "x";
            c[121] = "y";
            c[122] = "z";
            c[123] = "{";
            c[124] = "|";
            c[125] = "}";
            c[126] = "~";
            c[128] = "€";
            c[130] = "?";
            c[131] = "?";
            c[132] = "?";
            c[133] = "…";
            c[134] = "†";
            c[135] = "‡";
            c[136] = "?";
            c[137] = "‰";
            c[138] = "?";
            c[139] = "?";
            c[140] = "Œ";
            c[142] = "?";
            c[145] = "‘";
            c[146] = "’";
            c[147] = "“";
            c[148] = "”";
            c[149] = "?";
            c[150] = "?";
            c[151] = "?";
            c[152] = "?";
            c[153] = "™";
            c[154] = "?";
            c[155] = "?";
            c[156] = "œ";
            c[158] = "?";
            c[159] = "?";
            c[160] = " ";
            c[161] = "¡";
            c[162] = "￠";
            c[163] = "￡";
            c[164] = "¤";
            c[165] = "￥";
            c[166] = "|";
            c[167] = "§";
            c[168] = "¨";
            c[169] = "ⓒ";
            c[170] = "ª";
            c[171] = "≪";
            c[172] = "￢";
            c[174] = "®";
            c[175] = "?";
            c[176] = "°";
            c[177] = "±";
            c[178] = "²";
            c[179] = "³";
            c[180] = "´";
            c[181] = "μ";
            c[182] = "¶";
            c[183] = "·";
            c[184] = "¸";
            c[185] = "¹";
            c[186] = "º";
            c[187] = "≫";
            c[188] = "¼";
            c[189] = "½";
            c[190] = "¾";
            c[191] = "¿";
            c[192] = "A";
            c[193] = "A";
            c[194] = "A";
            c[195] = "A";
            c[196] = "A";
            c[197] = "A";
            c[198] = "Æ";
            c[199] = "C";
            c[200] = "E";
            c[201] = "E";
            c[202] = "E";
            c[203] = "E";
            c[204] = "I";
            c[205] = "I";
            c[206] = "I";
            c[207] = "I";
            c[208] = "Ð";
            c[209] = "N";
            c[210] = "O";
            c[211] = "O";
            c[212] = "O";
            c[213] = "O";
            c[214] = "O";
            c[215] = "×";
            c[216] = "Ø";
            c[217] = "U";
            c[218] = "U";
            c[219] = "U";
            c[220] = "U";
            c[221] = "Y";
            c[222] = "Þ";
            c[223] = "ß";
            c[224] = "a";
            c[225] = "a";
            c[226] = "a";
            c[227] = "a";
            c[228] = "a";
            c[229] = "a";
            c[230] = "æ";
            c[231] = "c";
            c[232] = "e";
            c[233] = "e";
            c[234] = "e";
            c[235] = "e";
            c[236] = "i";
            c[237] = "i";
            c[238] = "i";
            c[239] = "i";
            c[240] = "ð";
            c[241] = "n";
            c[242] = "o";
            c[243] = "o";
            c[244] = "o";
            c[245] = "o";
            c[246] = "o";
            c[247] = "÷";
            c[248] = "ø";
            c[249] = "u";
            c[250] = "u";
            c[251] = "u";
            c[252] = "u";
            c[253] = "y";
            c[254] = "þ";
            c[255] = "y";
        }

        public static int Char2Ascii(string p)
        {
            int z = i[StringHash(p) / 0x1F0748 + 0x40D];
            if (c[z] != p)
            {
                if (c[z - 32] != p)
                {
                    if (c[h[z]] != p)
                    {
                        if (c[y[z]] != p)
                        {
                            if (c[83] != p)
                                return 0;
                            return 83;
                        }
                        return y[z];
                    }
                    return h[z];
                }
                return z - 32;
            }
            return z;
        }
        public static int Char2Ascii(byte[] p)
        {
            int z = i[StringHash.StrHash(p) / 0x1F0748 + 0x40D];
            try
            {
                if (!c[z].GetBytes().Compare(p))
                {
                    if (!c[z - 32].GetBytes().Compare(p))
                    {
                        if (!c[h[z]].GetBytes().Compare(p))
                        {
                            if (!c[y[z]].GetBytes().Compare(p))
                            {
                                if (!c[83].GetBytes().Compare(p))
                                    return 0;
                                return 83;
                            }
                            return y[z];
                        }
                        return h[z];
                    }
                    return z - 32;
                }
                return z;
            }
            catch { return 0; }
        }
        public static string Ascii2Char(int a) => c[a];
        public static string A2S(int a)
        {
            string s = string.Empty;
            do
            {
                s = c[a - a / 0x100 * 0x100] + s;
                a /= 0x100;
            } while (a != 0);
            return s;
        }
        public static int S2A(string s)
        {
            int a = 0;
            for (int i = 0; i != StringLength(s); i++)
                a = a * 0x100 + Char2Ascii(SubString(s, i, i + 1));
            return a;
        }
        public static bool IsCharKorean(string s)
        {
            if (StringLength(s) != 3)
                return false;
            else if (Char2Ascii(SubString(s, 0, 1)) != 0)
                return false;
            return true;
        }
        public static bool IsCharKorean(byte[] s)
        {
            if (s.Length != 3)
                return false;
            else if (Char2Ascii(new byte[] { s[0] }) != 0)
                return false;
            return true;
        }
    }
}
